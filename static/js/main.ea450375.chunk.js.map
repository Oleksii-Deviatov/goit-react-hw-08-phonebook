{"version":3,"sources":["redux/contacts/contacts-reducer.js","redux/auth/auth-reducer.js","redux/store.js","redux/auth/auth-selectors.js","components/NavigationBar/NavigationBar.jsx","App.jsx","index.js","redux/contacts/contacts-actions.js","redux/auth/auth-operations.js","redux/auth/auth-actions.js","components/Title/Title.jsx"],"names":["contacts","createReducer","actions","_","payload","state","filter","id","loading","error","combineReducers","initState","name","email","user","token","setError","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","contactsReducer","auth","persistReducer","authReducer","devTools","process","persistor","persistStore","getIsAuthenticated","Boolean","mapDispatchToProps","onLogout","operations","connect","isAuthenticated","to","onClick","RegisterPage","lazy","LoginPage","HomePage","App","Container","maxWidth","fallback","Title","title","variant","exact","path","component","ReactDOM","render","StrictMode","document","getElementById","fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","addContactsRequest","addContactsSuccess","addContactError","delContactsRequest","delContactsSuccess","delContactsError","changeFilter","axios","defaults","baseURL","headers","common","Authorization","register","credentials","dispatch","a","post","response","data","message","login","logout","registrationRequest","registrationSuccess","registrationError","loginRequest","loginSuccess","loginError","logoutRequest","logoutSuccess","logoutError","getCurrentUserSuccess","getCurrentUserError","props","Typography","align"],"mappings":"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","file":"static/js/main.ea450375.chunk.js","sourcesContent":["import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport * as actions from '../../redux/contacts/contacts-actions';\n\nconst contacts = createReducer([], {\n  [actions.fetchContactsSuccess]: (_, { payload }) => payload,\n  [actions.addContactsSuccess]: (state, { payload }) => [...state, payload],\n  [actions.delContactsSuccess]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst loading = createReducer(false, {\n  [actions.fetchContactsRequest]: () => true,\n  [actions.fetchContactsSuccess]: () => false,\n  [actions.fetchContactsError]: () => false,\n  [actions.addContactsRequest]: () => true,\n  [actions.addContactsSuccess]: () => false,\n  [actions.addContactError]: () => false,\n  [actions.delContactsRequest]: () => true,\n  [actions.delContactsSuccess]: () => false,\n  [actions.delContactsError]: () => false,\n});\n\nconst filter = createReducer('', {\n  [actions.changeFilter]: (_, { payload }) => payload,\n});\n\nconst error = createReducer(null, {});\n\nexport default combineReducers({\n  contacts,\n  loading,\n  filter,\n  error,\n});\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport * as actions from './auth-actions';\n\nconst initState = { name: null, email: null };\n\nconst user = createReducer(initState, {\n  [actions.registrationSuccess]: (_, { payload }) => payload.user,\n  [actions.loginSuccess]: (_, { payload }) => payload.user,\n  [actions.logoutSuccess]: () => initState,\n  [actions.getCurrentUserSuccess]: (_, { payload }) => payload,\n});\n\nconst token = createReducer(null, {\n  [actions.registrationSuccess]: (_, { payload }) => payload.token,\n  [actions.loginSuccess]: (_, { payload }) => payload.token,\n  [actions.logoutSuccess]: () => null,\n});\n\nconst setError = (_, { payload }) => payload;\n\nconst error = createReducer(null, {\n  [actions.registrationError]: setError,\n  [actions.loginError]: setError,\n  [actions.logoutError]: setError,\n  [actions.getCurrentUserError]: setError,\n});\n\nexport default combineReducers({\n  user,\n  token,\n  error,\n});\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport contactsReducer from './contacts/contacts-reducer';\nimport authReducer from './auth/auth-reducer';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n];\n\nconst authPersistConfig = {\n  key: 'auth',\n  storage,\n  whitelist: ['token'],\n};\n\nconst store = configureStore({\n  reducer: {\n    contacts: contactsReducer,\n    auth: persistReducer(authPersistConfig, authReducer),\n  },\n\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nconst persistor = persistStore(store);\n\nexport { store, persistor };\n","const getIsAuthenticated = state => Boolean(state.auth.token);\n\nconst getUsername = state => state.auth.user.name;\n\nexport { getIsAuthenticated, getUsername };\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { getIsAuthenticated } from '../../redux/auth/auth-selectors';\nimport { NavLink } from 'react-router-dom';\nimport * as operations from '../../redux/auth/auth-operations';\n\nfunction NavigationBar({ isAuthenticated, onLogout }) {\n  return (\n    <>\n      <NavLink to=\"/home\">Home</NavLink>\n      <NavLink to=\"/register\">Register</NavLink>\n      <NavLink to=\"/login\">Login</NavLink>\n      {isAuthenticated && (\n        <NavLink to=\"/home\" onClick={onLogout}>\n          Logout\n        </NavLink>\n      )}\n    </>\n  );\n}\n\nconst mapStateToProps = state => ({\n  isAuthenticated: getIsAuthenticated(state),\n});\n\nconst mapDispatchToProps = {\n  onLogout: operations.logout,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NavigationBar);\n","import { Container } from '@material-ui/core';\n// import { connect } from 'react-redux';\n// import * as operations from './redux/contacts/contacts-operations';\n// import { useEffect } from 'react';\n// import { getLoading } from './redux/contacts/contacts-selectors';\nimport { Redirect, Route, Switch } from 'react-router-dom';\nimport { React, lazy, Suspense } from 'react';\nimport NavBar from './components/NavigationBar';\nimport Title from './components/Title';\n\nconst RegisterPage = lazy(() =>\n  import('./components/RegisterPage' /* webpackChunkName: \"RegisterPage\" */),\n);\n\nconst LoginPage = lazy(() =>\n  import('./components/LoginPage' /* webpackChunkName: \"LoginPage\" */),\n);\n\nconst HomePage = lazy(() =>\n  import('./components/Home' /* webpackChunkName: \"HomePage\" */),\n);\n\nfunction App() {\n  // useEffect(() => {\n  //   fetchContacts();\n  // }, []);\n\n  return (\n    <>\n      <Container maxWidth=\"xs\">\n        <Suspense fallback={null}>\n          <NavBar></NavBar>\n          <Title title=\"Phonebook\" variant=\"h2\" />\n          <Switch>\n            <Route exact path=\"/register\" component={RegisterPage} />\n            <Route exact path=\"/login\" component={LoginPage} />\n            <Route exact path=\"/home\" component={HomePage} />\n            <Redirect to=\"/\" />\n          </Switch>\n        </Suspense>\n      </Container>\n    </>\n  );\n}\n\n// const mapDispatchToProps = dispatch => {\n//   return {\n//     fetchContacts: () => dispatch(operations.fetchContacts()),\n//   };\n// };\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { store, persistor } from './redux/store';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <Provider store={store}>\n        <PersistGate loading={null} persistor={persistor}>\n          <App />\n        </PersistGate>\n      </Provider>\n    </Router>\n  </React.StrictMode>,\n\n  document.getElementById('root'),\n);\n","import { createAction } from '@reduxjs/toolkit';\n\nconst fetchContactsRequest = createAction('contacts/fetchRequest');\nconst fetchContactsSuccess = createAction('contacts/fetchSuccess');\nconst fetchContactsError = createAction('contacts/fetchError');\n\nconst addContactsRequest = createAction('contacts/addRequest');\nconst addContactsSuccess = createAction('contacts/addSuccess');\nconst addContactError = createAction('contacts/addError');\n\nconst delContactsRequest = createAction('contacts/delRequest');\nconst delContactsSuccess = createAction('contacts/delSuccess');\nconst delContactsError = createAction('contacts/delError');\n\nconst changeFilter = createAction('contacts/changeFilter');\n\nexport {\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n  addContactsRequest,\n  addContactsSuccess,\n  addContactError,\n  delContactsRequest,\n  delContactsSuccess,\n  delContactsError,\n  changeFilter,\n};\n","import axios from 'axios';\nimport * as actions from './auth-actions';\n\naxios.defaults.baseURL = 'https://goit-phonebook-api.herokuapp.com';\n\nconst token = {\n  set(token) {\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n  },\n  unset() {\n    axios.defaults.headers.common.Authorization = '';\n  },\n};\n\nconst register = credentials => async dispatch => {\n  dispatch(actions.registrationRequest());\n\n  try {\n    const response = await axios.post('/users/signup', credentials);\n\n    token.set(response.data.token);\n    dispatch(actions.registrationSuccess(response.data));\n  } catch (error) {\n    dispatch(actions.registrationError(error.message));\n  }\n};\n\nconst login = credentials => async dispatch => {\n  dispatch(actions.loginRequest());\n\n  try {\n    const response = await axios.post('/users/login', credentials);\n\n    token.set(response.data.token);\n    dispatch(actions.loginSuccess(response.data));\n  } catch (error) {\n    dispatch(actions.loginError(error.message));\n  }\n};\n\nconst logout = () => async dispatch => {\n  dispatch(actions.logoutRequest());\n\n  try {\n    const response = await axios.post('/users/logout');\n\n    token.unset();\n    dispatch(actions.logoutSuccess(response.data));\n  } catch (error) {\n    dispatch(actions.logoutError(error.message));\n  }\n};\n\nexport { register, login, logout };\n","import { createAction } from '@reduxjs/toolkit';\n\nconst registrationRequest = createAction('auth/registrationRequest');\nconst registrationSuccess = createAction('auth/registrationSuccess');\nconst registrationError = createAction('auth/registrationError');\n\nconst loginRequest = createAction('auth/loginRequest');\nconst loginSuccess = createAction('auth/loginSuccess');\nconst loginError = createAction('auth/loginError');\n\nconst logoutRequest = createAction('auth/logoutRequest');\nconst logoutSuccess = createAction('auth/logoutSuccess');\nconst logoutError = createAction('auth/logoutError');\n\nconst getCurrentUserRequest = createAction('auth/getCurrentUserRequest');\nconst getCurrentUserSuccess = createAction('auth/getCurrentUserSuccess');\nconst getCurrentUserError = createAction('auth/getCurrentUserError');\n\nexport {\n  registrationRequest,\n  registrationSuccess,\n  registrationError,\n  logoutRequest,\n  logoutSuccess,\n  logoutError,\n  loginRequest,\n  loginSuccess,\n  loginError,\n  getCurrentUserRequest,\n  getCurrentUserSuccess,\n  getCurrentUserError,\n};\n","import { Typography } from '@material-ui/core';\n\nfunction Title({ title, ...props }) {\n  return (\n    <Typography align=\"center\" {...props}>\n      {title}\n    </Typography>\n  );\n}\n\nexport default Title;\n"],"sourceRoot":""}