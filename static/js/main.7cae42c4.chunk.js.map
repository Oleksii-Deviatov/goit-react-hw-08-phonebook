{"version":3,"sources":["redux/contacts/contacts-reducer.js","redux/auth/auth-reducer.js","redux/store.js","redux/auth/auth-selectors.js","components/NavigationBar/NavigationBar.jsx","components/PrivateRoute.js","components/PublicRoute.js","App.jsx","index.js","redux/contacts/contacts-actions.js","redux/auth/auth-operations.js","components/NavigationBar/styles.module.css","redux/auth/auth-actions.js"],"names":["contacts","createReducer","actions","_","payload","state","filter","id","loading","error","combineReducers","initState","name","email","user","authActions","token","setError","isAuthenticated","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","contactsReducer","auth","persistReducer","authReducer","devTools","process","persistor","persistStore","getIsAuthenticated","getUsername","mapDispatchToProps","onLogout","operations","connect","AppBar","position","Toolbar","Button","component","Link","to","color","className","styles","barTitle","Typography","variant","greetings","onClick","Component","redirectTo","routeProps","render","props","restricted","StartPage","lazy","HomePage","RegisterPage","LoginPage","onGetCurrentUser","authOperations","useEffect","Container","maxWidth","fallback","align","exact","path","ReactDOM","StrictMode","document","getElementById","fetchContactsRequest","createAction","fetchContactsSuccess","fetchContactsError","addContactsRequest","addContactsSuccess","addContactError","delContactsRequest","delContactsSuccess","delContactsError","changeFilter","axios","defaults","baseURL","headers","common","Authorization","register","credentials","dispatch","a","post","response","data","message","login","logout","getCurrentUser","getState","persistedToken","get","module","exports","registrationRequest","registrationSuccess","registrationError","loginRequest","loginSuccess","loginError","logoutRequest","logoutSuccess","logoutError","getCurrentUserRequest","getCurrentUserSuccess","getCurrentUserError"],"mappings":"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","file":"static/js/main.7cae42c4.chunk.js","sourcesContent":["import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport * as actions from '../../redux/contacts/contacts-actions';\n\nconst contacts = createReducer([], {\n  [actions.fetchContactsSuccess]: (_, { payload }) => payload,\n  [actions.addContactsSuccess]: (state, { payload }) => [...state, payload],\n  [actions.delContactsSuccess]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst loading = createReducer(false, {\n  [actions.fetchContactsRequest]: () => true,\n  [actions.fetchContactsSuccess]: () => false,\n  [actions.fetchContactsError]: () => false,\n  [actions.addContactsRequest]: () => true,\n  [actions.addContactsSuccess]: () => false,\n  [actions.addContactError]: () => false,\n  [actions.delContactsRequest]: () => true,\n  [actions.delContactsSuccess]: () => false,\n  [actions.delContactsError]: () => false,\n});\n\nconst filter = createReducer('', {\n  [actions.changeFilter]: (_, { payload }) => payload,\n});\n\nconst error = createReducer(null, {});\n\nexport default combineReducers({\n  contacts,\n  loading,\n  filter,\n  error,\n});\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport * as authActions from './auth-actions';\n\nconst initState = { name: null, email: null };\n\nconst user = createReducer(initState, {\n  [authActions.registrationSuccess]: (_, { payload }) => payload.user,\n  [authActions.loginSuccess]: (_, { payload }) => payload.user,\n  [authActions.logoutSuccess]: () => initState,\n  [authActions.getCurrentUserSuccess]: (_, { payload }) => payload,\n});\n\nconst token = createReducer(null, {\n  [authActions.registrationSuccess]: (_, { payload }) => payload.token,\n  [authActions.loginSuccess]: (_, { payload }) => payload.token,\n  [authActions.logoutSuccess]: () => null,\n});\n\nconst setError = (_, { payload }) => payload;\n\nconst error = createReducer(null, {\n  [authActions.registrationError]: setError,\n  [authActions.loginError]: setError,\n  [authActions.logoutError]: setError,\n  [authActions.getCurrentUserError]: setError,\n});\n\nconst isAuthenticated = createReducer(false, {\n  [authActions.registrationSuccess]: () => true,\n  [authActions.loginSuccess]: () => true,\n  [authActions.getCurrentUserSuccess]: () => true,\n  [authActions.registrationError]: () => false,\n  [authActions.loginError]: () => false,\n  [authActions.getCurrentUserError]: () => false,\n  [authActions.logoutSuccess]: () => false,\n});\n\nexport default combineReducers({\n  user,\n  isAuthenticated,\n  token,\n  error,\n});\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport contactsReducer from './contacts/contacts-reducer';\nimport authReducer from './auth/auth-reducer';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n];\n\nconst authPersistConfig = {\n  key: 'auth',\n  storage,\n  whitelist: ['token'],\n};\n\nconst store = configureStore({\n  reducer: {\n    contacts: contactsReducer,\n    auth: persistReducer(authPersistConfig, authReducer),\n  },\n\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nconst persistor = persistStore(store);\n\nexport { store, persistor };\n","const getIsAuthenticated = state => state.auth.isAuthenticated;\n\nconst getUsername = state => state.auth.user.name;\n\nexport { getIsAuthenticated, getUsername };\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport {\n  getIsAuthenticated,\n  getUsername,\n} from '../../redux/auth/auth-selectors';\nimport * as operations from '../../redux/auth/auth-operations';\nimport styles from './styles.module.css';\n\nfunction NavigationBar({ isAuthenticated, getUsername, onLogout }) {\n  // const location = window.location.pathname;\n\n  return (\n    <>\n      <AppBar position=\"static\">\n        <Toolbar>\n          {!isAuthenticated && (\n            <Button\n              component={Link}\n              to=\"/\"\n              color=\"inherit\"\n              className={styles.barTitle}\n            >\n              to start\n            </Button>\n          )}\n\n          {!isAuthenticated && (\n            <Button component={Link} to=\"/login\" color=\"inherit\">\n              login\n            </Button>\n          )}\n\n          {!isAuthenticated && (\n            <Button component={Link} to=\"/register\" color=\"inherit\">\n              Register\n            </Button>\n          )}\n\n          {isAuthenticated && (\n            <Typography variant=\"h6\" className={styles.greetings}>\n              Welcome {getUsername} !\n            </Typography>\n          )}\n\n          {isAuthenticated && (\n            <Button onClick={onLogout} color=\"inherit\">\n              logout\n            </Button>\n          )}\n        </Toolbar>\n      </AppBar>\n    </>\n  );\n}\n\nconst mapStateToProps = state => ({\n  isAuthenticated: getIsAuthenticated(state),\n  getUsername: getUsername(state),\n});\n\nconst mapDispatchToProps = {\n  onLogout: operations.logout,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(NavigationBar);\n","import { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { getIsAuthenticated } from '../redux/auth/auth-selectors';\n\nconst PrivateRoute = ({\n  component: Component,\n  isAuthenticated,\n  redirectTo,\n  ...routeProps\n}) => {\n  return (\n    <Route\n      {...routeProps}\n      render={props =>\n        isAuthenticated ? (\n          <Component {...props} />\n        ) : (\n          <Redirect to={redirectTo} />\n        )\n      }\n    />\n  );\n};\n\nconst mapStateToProps = state => ({\n  isAuthenticated: getIsAuthenticated(state),\n});\n\nexport default connect(mapStateToProps)(PrivateRoute);\n","import { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { getIsAuthenticated } from '../redux/auth/auth-selectors';\n\nconst PublicRoute = ({\n  component: Component,\n  isAuthenticated,\n  redirectTo,\n  ...routeProps\n}) => {\n  return (\n    <Route\n      {...routeProps}\n      render={props =>\n        isAuthenticated && routeProps.restricted ? (\n          <Redirect to={redirectTo} />\n        ) : (\n          <Component {...props} />\n        )\n      }\n    />\n  );\n};\n\nconst mapStateToProps = state => ({\n  isAuthenticated: getIsAuthenticated(state),\n});\n\nexport default connect(mapStateToProps)(PublicRoute);\n","import { Typography, Container } from '@material-ui/core';\nimport { connect } from 'react-redux';\nimport * as authOperations from './redux/auth/auth-operations';\nimport { useEffect } from 'react';\nimport { Redirect, Route, Switch } from 'react-router-dom';\nimport { React, lazy, Suspense } from 'react';\nimport NavBar from './components/NavigationBar';\nimport PrivateRoute from './components/PrivateRoute';\nimport PublicRoute from './components/PublicRoute';\n\nconst StartPage = lazy(() =>\n  import('./components/StartPage' /* webpackChunkName: \"StartPage\" */),\n);\n\nconst HomePage = lazy(() =>\n  import('./components/Home' /* webpackChunkName: \"HomePage\" */),\n);\n\nconst RegisterPage = lazy(() =>\n  import('./components/RegisterPage' /* webpackChunkName: \"RegisterPage\" */),\n);\n\nconst LoginPage = lazy(() =>\n  import('./components/LoginPage' /* webpackChunkName: \"LoginPage\" */),\n);\n\nfunction App({ onGetCurrentUser }) {\n  useEffect(() => {\n    onGetCurrentUser();\n  }, []);\n\n  return (\n    <>\n      <Container maxWidth=\"xs\">\n        <Suspense fallback={null}>\n          <NavBar></NavBar>\n\n          <Typography align=\"center\" variant=\"h2\">\n            Phonebook\n          </Typography>\n\n          <Switch>\n            <PublicRoute\n              exact\n              path=\"/\"\n              restricted\n              redirectTo=\"/home\"\n              component={StartPage}\n            />\n\n            <PublicRoute\n              path=\"/register\"\n              restricted\n              redirectTo=\"/home\"\n              component={RegisterPage}\n            />\n\n            <PublicRoute\n              path=\"/login\"\n              restricted\n              redirectTo=\"/home\"\n              component={LoginPage}\n            />\n\n            <PrivateRoute\n              path=\"/home\"\n              redirectTo=\"/login\"\n              component={HomePage}\n            />\n\n            <Redirect to=\"/\" />\n          </Switch>\n        </Suspense>\n      </Container>\n    </>\n  );\n}\n\nconst mapDispatchToProps = {\n  onGetCurrentUser: authOperations.getCurrentUser,\n};\n\nexport default connect(null, mapDispatchToProps)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { store, persistor } from './redux/store';\nimport { PersistGate } from 'redux-persist/integration/react';\n// import { BrowserRouter as Router } from 'react-router-dom';\nimport { HashRouter as Router } from 'react-router-dom';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <Provider store={store}>\n        <PersistGate loading={null} persistor={persistor}>\n          <App />\n        </PersistGate>\n      </Provider>\n    </Router>\n  </React.StrictMode>,\n\n  document.getElementById('root'),\n);\n","import { createAction } from '@reduxjs/toolkit';\n\nconst fetchContactsRequest = createAction('contacts/fetchRequest');\nconst fetchContactsSuccess = createAction('contacts/fetchSuccess');\nconst fetchContactsError = createAction('contacts/fetchError');\n\nconst addContactsRequest = createAction('contacts/addRequest');\nconst addContactsSuccess = createAction('contacts/addSuccess');\nconst addContactError = createAction('contacts/addError');\n\nconst delContactsRequest = createAction('contacts/delRequest');\nconst delContactsSuccess = createAction('contacts/delSuccess');\nconst delContactsError = createAction('contacts/delError');\n\nconst changeFilter = createAction('contacts/changeFilter');\n\nexport {\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n  addContactsRequest,\n  addContactsSuccess,\n  addContactError,\n  delContactsRequest,\n  delContactsSuccess,\n  delContactsError,\n  changeFilter,\n};\n","import axios from 'axios';\nimport * as authActions from './auth-actions';\n\naxios.defaults.baseURL = 'https://goit-phonebook-api.herokuapp.com';\n\nconst token = {\n  set(token) {\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n  },\n  unset() {\n    axios.defaults.headers.common.Authorization = '';\n  },\n};\n\nconst register = credentials => async dispatch => {\n  dispatch(authActions.registrationRequest());\n\n  try {\n    const response = await axios.post('/users/signup', credentials);\n\n    token.set(response.data.token);\n    dispatch(authActions.registrationSuccess(response.data));\n  } catch (error) {\n    dispatch(authActions.registrationError(error.message));\n  }\n};\n\nconst login = credentials => async dispatch => {\n  dispatch(authActions.loginRequest());\n\n  try {\n    const response = await axios.post('/users/login', credentials);\n\n    token.set(response.data.token);\n    dispatch(authActions.loginSuccess(response.data));\n  } catch (error) {\n    dispatch(authActions.loginError(error.message));\n  }\n};\n\nconst logout = () => async dispatch => {\n  dispatch(authActions.logoutRequest());\n\n  try {\n    const response = await axios.post('/users/logout');\n\n    token.unset();\n    dispatch(authActions.logoutSuccess(response.data));\n  } catch (error) {\n    dispatch(authActions.logoutError(error.message));\n  }\n};\n\nconst getCurrentUser = () => async (dispatch, getState) => {\n  const {\n    auth: { token: persistedToken },\n  } = getState();\n\n  if (!persistedToken) {\n    return;\n  }\n\n  token.set(persistedToken);\n  dispatch(authActions.getCurrentUserRequest());\n\n  try {\n    const response = await axios.get('/users/current');\n\n    dispatch(authActions.getCurrentUserSuccess(response.data));\n  } catch (error) {\n    dispatch(authActions.getCurrentUserError(error.message));\n  }\n};\n\nexport { register, login, logout, getCurrentUser };\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"barTitle\":\"styles_barTitle__lRdM-\",\"greetings\":\"styles_greetings__2xeB9\"};","import { createAction } from '@reduxjs/toolkit';\n\nconst registrationRequest = createAction('auth/registrationRequest');\nconst registrationSuccess = createAction('auth/registrationSuccess');\nconst registrationError = createAction('auth/registrationError');\n\nconst loginRequest = createAction('auth/loginRequest');\nconst loginSuccess = createAction('auth/loginSuccess');\nconst loginError = createAction('auth/loginError');\n\nconst logoutRequest = createAction('auth/logoutRequest');\nconst logoutSuccess = createAction('auth/logoutSuccess');\nconst logoutError = createAction('auth/logoutError');\n\nconst getCurrentUserRequest = createAction('auth/getCurrentUserRequest');\nconst getCurrentUserSuccess = createAction('auth/getCurrentUserSuccess');\nconst getCurrentUserError = createAction('auth/getCurrentUserError');\n\nexport {\n  registrationRequest,\n  registrationSuccess,\n  registrationError,\n  logoutRequest,\n  logoutSuccess,\n  logoutError,\n  loginRequest,\n  loginSuccess,\n  loginError,\n  getCurrentUserRequest,\n  getCurrentUserSuccess,\n  getCurrentUserError,\n};\n"],"sourceRoot":""}